A logging chain is a set of types that logs the output of some program to more than one io.Writer interface. We could have a type 
that logs to the console, a type that logs to a file, and a type that logs to a remote server. You can make three calls every time 
you want to do some logging, but it's more elegant to make only one and provoke a chain reaction.

But also, we could have a chain of checks and, in case one of them fails, break the chain and return something. 
This is the authentication and authorization middleware works.

We are going to develop a multi-logger solution that we can chain in the way we want. We will use
two different console loggers and one general-purpose logger.

ACCEPTANCE CRITERIA:
    1. We need a simple logger that logs the text of a request with a prefix First logger and passes it to the next link in the chain.
    2. A second logger will write on the console if the incoming text has the word hello and pass the request to a third logger. 
        But, if not, the chain will be broken and it will return immediately.
    3. A third logger type is a general purpose logger called writerLogger that uses an io.writer interface to log.
    4. A concrete implementation of the writerLogger writes to a file and represents the third link in the chain.